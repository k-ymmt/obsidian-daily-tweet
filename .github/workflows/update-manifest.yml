name: Update Manifest

on:
  workflow_dispatch:

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Update package.json version
        run: |
          # Set git identity for npm version command
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Update package.json version with minor version bump
          echo "Updating package.json with minor version bump"
          VERSION_OUTPUT=$(npm version minor)

          # Extract the version number from the output
          # The output format is:
          # > version
          # > node version-bump.mjs && git add dist/manifest.json versions.json
          #
          # 1.1.0
          NEW_VERSION=$(echo "$VERSION_OUTPUT" | grep -v "^>" | grep -v "^$" | tail -n 1)

          # If the above doesn't work, fall back to the original method
          if [ -z "$NEW_VERSION" ]; then
            NEW_VERSION=${VERSION_OUTPUT#v}
          fi

          echo "New version: $NEW_VERSION"

          # Set the npm_package_version environment variable
          export npm_package_version=$NEW_VERSION

          # Save the new version to an environment variable for later steps
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          # Run version-bump.mjs
          node version-bump.mjs

          git push --follow-tags
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          # Create a release with the tag that was already created
          gh release create "v${{ env.NEW_VERSION }}" \
            --title "v${{ env.NEW_VERSION }}" \
            --generate-notes \
            --prerelease \
            dist/main.js dist/manifest.json dist/styles.css
